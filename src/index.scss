@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/reboot";
@import "~bootstrap/scss/utilities";
@import "~bootstrap/scss/grid";
@import "~bootstrap/scss/type";
@import "~bootstrap/scss/forms";
@import "~bootstrap/scss/custom-forms";
@import "~bootstrap/scss/input-group";
@import "~bootstrap/scss/buttons";
@import "~bootstrap/scss/button-group";
@import "~bootstrap/scss/jumbotron";
@import "~bootstrap/scss/list-group";
@import "~bootstrap/scss/spinners";
@import "~bootstrap/scss/alert";

body {
  overflow-x: hidden;
  overflow-y: scroll;
}

svg {
  width: 1em;
  height: 1em;
  fill: white;
}

.btn > svg {
  margin: 0 .3em .15em 0;
}

li.list-group-item-action:not(.active):hover {
  cursor: pointer;
}

@keyframes forwardsIn {
  from {
    transform: translateX(2rem);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes forwardsOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-2rem);
    opacity: 0;
  }
}

.root {
  animation: forwardsIn .25s ease-out;

  &.old {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    animation-name: forwardsOut;
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(15, minmax(0, 1fr));
  border-radius: $border-radius-lg;
  overflow: hidden;

  &-item {
    position: relative;
    padding: .5rem;
    background-color: $gray-300;
    background-origin: content-box;
    background-repeat: no-repeat;
    background-size: cover;

    &:nth-child(odd)::after {
      content: "";
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, .1);
    }

    &[data-product="true"] {
      transition: background-color .25s ease;

      &:hover {
        background-color: transparentize($danger, .75);
        cursor: pointer;
        transition: background-color .25s ease .25s;
      }
    }

    &[data-blocked="true"] {
      background-image: url(./assets/times-solid.svg) !important;
      background-size: 1.5rem;
      background-position: center;
      background-repeat: no-repeat;
      background-blend-mode: overlay;
    }
  }
}

.drag-source {
  padding: .5rem;
  border: 2px dashed $gray-400;
  border-radius: $btn-border-radius;
  background-repeat: no-repeat;
  background-origin: content-box;
  background-size: cover;

  &:hover {
    cursor: grab;
  }
}

.canvas {
  border: 2px dashed $gray-400;
  border-radius: $btn-border-radius;
}

.force-square::after {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.calculator {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  grid-template-rows: repeat(6, minmax(0, 1fr));
  grid-gap: .5rem;
  padding: 1rem;
  background-color: $gray-200;
  border-radius: $btn-border-radius;

  & .result {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding: 0 .5rem;
    background-color: white;
    font-size: 1.5rem;
    border-radius: $btn-border-radius;
    overflow: hidden;
  }

  & .column-span {
    &-2 {
      grid-column: span 2;
    }

    &-4 {
      grid-column: span 4;
    }
  }
}
